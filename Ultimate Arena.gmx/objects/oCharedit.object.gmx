<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.IDselected = -1;
global.copyProtection = 0;
global.editColor = 0;

global.editColors[0,0] = 255;
global.editColors[0,1] = 255;
global.editColors[0,2] = 255;

global.editColors[1,0] = 255;
global.editColors[1,1] = 64;
global.editColors[1,2] = 64;

global.editColors[2,0] = 255;
global.editColors[2,1] = 175;
global.editColors[2,2] = 64;

global.editColors[3,0] = 255;
global.editColors[3,1] = 255;
global.editColors[3,2] = 64;

global.editColors[4,0] = 64;
global.editColors[4,1] = 255;
global.editColors[4,2] = 64;

global.editColors[5,0] = 0;
global.editColors[5,1] = 192;
global.editColors[5,2] = 192;

global.editColors[6,0] = 0;
global.editColors[6,1] = 64;
global.editColors[6,2] = 255;

section[54] = "";
section[0] = "eat";
section[1] = "drink";
section[2] = "bathe";
section[3] = "make_wspear";
section[4] = "make_wbow";
section[5] = "make_medkit";
section[6] = "make_trap";
section[7] = "use_medkit";
section[8] = "set_trap";
section[9] = "place_mine";
section[10] = "disarm_mine";
section[11] = "group_up";
section[12] = "end_group";
section[13] = "think";
section[14] = "think_rare";
section[15] = "kill_unarmed";
section[16] = "kill_unarmed_insane";
section[17] = "kill_wspear";
section[18] = "kill_wspear_insane";
section[19] = "kill_wspear_fail";
section[20] = "kill_sspear";
section[21] = "kill_sspear_insane";
section[22] = "kill_sspear_fail";
section[23] = "kill_wbow";
section[24] = "kill_wbow_insane";
section[25] = "kill_wbow_fail";
section[26] = "kill_sbow";
section[27] = "kill_sbow_insane";
section[28] = "kill_sbow_fail";
section[29] = "kill_drown";
section[30] = "kill_drown_insane";
section[31] = "die_hunger";
section[32] = "die_thirst";
section[33] = "die_mine";
section[34] = "die_mine_m";
section[35] = "die_mine_p";
section[36] = "die_trap";
section[37] = "arena_escape_fail";
section[38] = "suicide";
section[39] = "wander";
section[40] = "sleep";
section[41] = "run";
section[42] = "chase";
section[43] = "hunt";
section[44] = "search_water";
section[45] = "search_food";
section[46] = "get_food";
section[47] = "get_wood";
section[48] = "get_rope";
section[49] = "get_stone";
section[50] = "attack_unarmed";
section[51] = "attack_wspear";
section[52] = "attack_sspear";
section[53] = "attack_wbow";
section[54] = "attack_sbow";

sectionName[54] = "";
sectionName[0] = "EAT";
sectionName[1] = "DRINK";
sectionName[2] = "BATHE";
sectionName[3] = "MAKE WOODEN SPEAR";
sectionName[4] = "MAKE WOODEN BOW";
sectionName[5] = "MAKE MEDKIT";
sectionName[6] = "MAKE TRAP";
sectionName[7] = "USE MEDKIT";
sectionName[8] = "SET TRAP";
sectionName[9] = "PLACE MINE";
sectionName[10] = "DISARM MINE";
sectionName[11] = "GROUP UP";
sectionName[12] = "END GROUP";
sectionName[13] = "THINK";
sectionName[14] = "THINK (RARE)";
sectionName[15] = "KILL UNARMED";
sectionName[16] = "KILL UNARMED (INSANE)";
sectionName[17] = "KILL WOODEN SPEAR";
sectionName[18] = "KILL WOODEN SPEAR (INSANE)";
sectionName[19] = "KILL WOODEN SPEAR (FAIL)";
sectionName[20] = "KILL STEEL SPEAR";
sectionName[21] = "KILL STEEL SPEAR (INSANE)";
sectionName[22] = "KILL STEEL SPEAR (FAIL)";
sectionName[23] = "KILL WOODEN BOW";
sectionName[24] = "KILL WOODEN BOW (INSANE)";
sectionName[25] = "KILL WOODEN BOW (INSANE)";
sectionName[26] = "KILL STEEL BOW";
sectionName[27] = "KILL STEEL BOW (INSANE)";
sectionName[28] = "KILL STEEL BOW (FAIL)";
sectionName[29] = "KILL DROWN";
sectionName[30] = "KILL DROWN (INSANE)";
sectionName[31] = "DIE HUNGER";
sectionName[32] = "DIE THIRST";
sectionName[33] = "DIE MINE";
sectionName[34] = "DIE ENEMY MINE";
sectionName[35] = "DIE PLACING MINE";
sectionName[36] = "DIE TRAP";
sectionName[37] = "DIE ESCAPING ARENA";
sectionName[38] = "SUICIDE (INSANE)";
sectionName[39] = "WANDER";
sectionName[40] = "SLEEP";
sectionName[41] = "RUN";
sectionName[42] = "CHASE";
sectionName[43] = "HUNT (INSANE)";
sectionName[44] = "SEARCH FOR WATER";
sectionName[45] = "SEARCH FOR FOOD";
sectionName[46] = "GET FOOD";
sectionName[47] = "GET WOOD";
sectionName[48] = "GET ROPE";
sectionName[49] = "GET STONE";
sectionName[50] = "ATTACK UNARMED";
sectionName[51] = "ATTACK WOODEN SPEAR";
sectionName[52] = "ATTACK STEEL SPEAR";
sectionName[53] = "ATTACK WOODEN BOW";
sectionName[54] = "ATTACK STEEL BOW";

newImage = sFighterImage;
command = 13;
textList = 0;
currentList = 0;
toggleList = 0;

tempTags = 0;
for(i=0;i&lt;5;i++)
    global.editStats[i] = 5;
    
array_from_update_file("");
array_from_section();
    
with(zui_main())
{
    with(zui_create(0, 0, objUIWindow))
    {
        zui_set_anchor(0, 0);
        zui_set_size(260, window_get_height());
        zui_set_position(0, 0);
        wID = "Character List";
        with(zui_create(0, 0, objUIWindowCaption))
            caption = "Characters (Click to edit)";
            
        with(zui_create(0, 24, objUIListBox))
        {
            zui_set_anchor(0, 0);
            zui_set_size(260, window_get_height()-64);
            callback = charedit_ui;
            listID = 0;
            initialize_listbox(global.cNAME);
            with(zui_create(0, 0, objUIListBoxScroll)){}
        }
        with (zui_create(5, __height - 35, objUIButton)) 
        {
            zui_set_anchor(0,0);
            zui_set_size(120, 30);
            caption = "Delete Character";
            callback = charedit_ui;
            bID = 5;
            type = 2;
        }
        
        with (zui_create(__width - 129, __height - 35, objUIButton)) 
        {
            zui_set_anchor(0,0);
            zui_set_size(124, 30);
            caption = "Go Back";
            callback = charedit_ui;
            bID = 0;
        }
        
    }
    create_window_charedit();
    
}

with(oUIImageButton)
{
    if(global.editColor != type)
        color = c_gray;
    else
        color = c_white;
}
/*
with(objUIListBox){
    if(listID == 0){
        sID = 0;
        script_execute(callback, id);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_map_find_value(async_load, "status"))
{
    if (ds_map_find_value(async_load, "result") != "")
    {
        global.TAGS[global.TAG_COUNT]=ds_map_find_value(async_load, "result");
        global.TAG_LIST[global.TAG_COUNT,0] = global.IDselected;
        global.TAG_COUNT++;
        ini_open(working_directory+"characters\"+global.fNAME[global.IDselected]);
        var prevtag = ini_read_string("character","tags","");
        if(prevtag!= "")
            ini_write_string("character","tags",prevtag+","+global.TAGS[global.TAG_COUNT-1]);
        else
            ini_write_string("character","tags",global.TAGS[global.TAG_COUNT-1]);
        ini_close();
        initialize_characters();
        with(objUIListBox){
            if(listID == 1){
                initialize_listbox(global.TAGS);
                selected=0;
                for(var i=0; i&lt;global.TAG_COUNT; i++){
                    selected[i] = 1;
                    for(var j=0; j&lt;array_length_2d(global.TAG_LIST,i); j++){
                        if(global.TAG_LIST[i,j] == global.IDselected){
                            selected[i] = 0;
                            break;
                        }
                    }
                }
            }
        }
        /*with(objUIWindow)
            if(wID = "Phrase Editor")
                text = keyboard_string+": '" + ds_map_find_value(async_load, "result") + "'";*/
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font0);
draw_set_color(c_white);
draw_set_valign(fa_top);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
